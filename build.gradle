apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'findbugs'
apply plugin: 'pmd'
//apply plugin: 'jacoco'
//apply plugin: 'checkstyle'

repositories {
    mavenCentral()
}

project.group = 'lt.rieske.skeleton'
project.archivesBaseName = 'dropwizard-skeleton'
project.version = "DEV-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'lt.rieske.skeleton.SkeletonService'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

checkstyle {
    toolVersion = "6.0"
    configFile = new File(rootDir, "checkstyle.xml")
}

findbugs {
    sourceSets = [sourceSets.main, sourceSets.test]
}

jar.dependsOn check

dependencies {
    compile "io.dropwizard:dropwizard-core:0.9.1"
    compile "io.dropwizard:dropwizard-client:0.9.1"
    compile "com.google.guava:guava:19.0"

    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.3.0"
    testCompile "io.dropwizard:dropwizard-testing:0.9.1"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "org.unitils:unitils-core:3.4.2"
}

jar {
    def manifestClasspath = configurations.compile.collect { "lib/" + it.getName() }.join(' ')
    manifest {
        attributes 'Build-Date': new Date(),
                'Build-JDK': System.getProperty('java.version'),
                'Main-Class': "$mainClassName",
                'Class-Path': manifestClasspath
    }
}

task copyDependenciesToDistribution(type: Copy) {
    from configurations.runtime
    into "build/distributions/lib"
}

task copyJarToDistribution(type: Copy) {
    dependsOn jar
    from jar.archivePath
    into "$distsDir"
}

assemble {
    dependsOn copyJarToDistribution, copyDependenciesToDistribution
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

run {
    args 'server', './configuration/production.yml'
}

run.dependsOn check